@model IEnumerable<MotoBikeManage.Models.Maintenance>

@{
    ViewBag.Title = "Index";

    // Retrieve the user role from ViewBag [cite: 2]
    var userRole = ViewBag.UserRole as string;

    // Set the layout based on the user role [cite: 3, 4, 6]
    if (userRole == "Admin")
    {
        Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    }
    // Add other roles as needed. Example for a 'User' role:
    else if (userRole == "NhanVien") // Based on your index.txt [cite: 4]
    {
        Layout = "~/Views/Shared/_Layout_Staff.cshtml"; // Ensure this path is correct [cite: 5]
    }
    else // Default layout for other roles or if role is not set [cite: 6]
    {
        // You might want to set a default layout or handle this case differently
        Layout = "~/Views/Shared/_Layout.cshtml"; // Example default layout [cite: 6]
    }
}

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/js/bootstrap.bundle.min.js"></script>

<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">

<style>
    /* Your existing CSS styles remain here */
    /* Tổng thể */
    body {
        font-family: Arial, sans-serif;
        background-color: #f9f9f9;
        /*margin: 20px;*/
    }

    /* Container chính */
    .container {
        background-color: #fff;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        margin-top: 55px !important;
        /*width: 100% !important;*/
        margin: 0 !important;
    }

    /* Bảng */
    table.table {
        width: 100%;
        border-collapse: collapse;
    }

        table.table thead {
            background-color: #f8f9fa;
        }

            table.table thead th {
                text-align: center;
                padding: 12px;
                font-weight: bold;
            }

        table.table tbody td {
            text-align: center;
            padding: 10px;
        }

        table.table tbody tr:nth-child(even) {
            background-color: #f2f2f2; /* Màu nền xen kẽ */
        }

        table.table tbody tr:hover {
            background-color: #e9ecef; /* Hiệu ứng hover */
        }

        /* Hình ảnh */
        table.table tbody td img {
            border-radius: 10%;
            width: 100px;
            height: 80px;
            object-fit: cover; /* Nếu muốn cắt ảnh vừa khung */
        }

    /* Nút hành động */
    .btn-sm {
        margin: 25px;
        /*padding: 6px 10px;*/
        font-size: 14px;
    }

    /* Chỉnh sửa màu sắc và hình dạng icon */
    .btn-primary {
        background-color: #007bff;
        border-color: #007bff;
        color: white; /* Màu chữ trắng */
        margin-right: 5px; /* Khoảng cách giữa icon và chữ */
    }

    .btn-danger {
        background-color: #dc3545;
        border-color: #dc3545;
        color: white; /* Màu chữ trắng */
        margin-right: 5px; /* Khoảng cách giữa icon và chữ */
    }

    .btn-primary:hover {
        background-color: #0056b3;
    }

    .btn-danger:hover {
        background-color: #c82333;
    }

    /* Phân trang */
    .pagination {
        display: flex;
        justify-content: center;
        margin-top: 20px;
    }

        .pagination .page-item {
            margin-right: 5px; /* Khoảng cách giữa các số trang */
        }

        .pagination .page-link {
            color: #007bff;
            border-radius: 5px;
            padding: 8px 12px;
        }

            .pagination .page-link:hover {
                background-color: #e9ecef; /* Hiệu ứng hover */
            }

        .pagination .active .page-link {
            background-color: #007bff;
            color: white !important; /* Màu chữ trong trang hiện tại */
        }

    /* Loại bỏ dấu chấm <li> ở phân trang */
    .pagination {
        list-style: none;
    }

        /* Xóa gạch chân ở phân trang */
        .pagination .page-link {
            text-decoration: none;
        }


    /*--lọc*/
    .form-inline {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 10px;
    }

    .form-group {
        display: flex;
        align-items: center;
        margin-top: 25px;
    }

        .form-group label {
            font-weight: bold;
            margin-right: 5px;
        }

    .form-control {
        width: 150px;
        padding: 5px;
    }

    button.btn {
        /*padding: 5px 15px;*/
        border: 1px solid black;
        background-color: white;
        color: black;
        font-weight: bold;
        cursor: pointer;
        margin-top: 25px;
        margin-left: 25px;
    }
</style>

@{
    // Keep the existing code for getting filter values
    var currentFilterCategory = Request.QueryString["filterCategory"] ?? "";
    var currentFilterStatus = Request.QueryString["filterStatus"] ?? "";
    string emptyListMessage = TempData["EmptyListMessage"] as string;
}

<form method="get" action="@Url.Action("Index", "BaoTri")" class="form-inline mb-3 justify-content-center">
    <div class="form-group mr-2">
        <label for="filterCategory" class="mr-2">Tất cả:</label>
        <select id="filterCategory"
                name="filterCategory"
                class="form-control"
                onchange="onChangeCategory()">
            <option value="" @(currentFilterCategory == "" ? "selected" : "")>Tất cả</option>
            <option value="approval_status" @(currentFilterCategory == "approval_status" ? "selected" : "")>
                Trạng thái phê duyệt
            </option>
            <option value="completion_status" @(currentFilterCategory == "completion_status" ? "selected" : "")>
                Trạng thái hoàn thành
            </option>
            <option value="completion_approval_status" @(currentFilterCategory == "completion_approval_status" ? "selected" : "")>
                Trạng thái phê duyệt hoàn thành
            </option>
        </select>
    </div>

    <div class="form-group mr-2">
        <label for="filterStatus" class="mr-2">Thuộc tính tương ứng:</label>
        <select id="filterStatus"
                name="filterStatus"
                class="form-control"
                disabled>
            <option value="">Tất cả</option>
        </select>
    </div>

    <button type="submit" class="btn btn-primary">Lọc</button>
</form>

<div class="container mt-5" style="width:100%">
    <table class="table table-bordered text-center">
        <thead>
            <tr>
                <th>Nhân viên</th>
                <th>Số khung xe</th>
                <th>Lí do bảo trì</th>
                <th>Ngày bắt đầu</th>
                <th>Ngày kết thúc</th>
                <th>Trạng thái phê duyệt</th>
                <th>Trạng thái phê duyệt hoàn thành</th>
                <th>Trạng thái hoàn thành</th>
                <th>Hành động</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.User1.full_name</td>
                    <td>@item.Vehicle.frame_number</td>
                    <td>@item.reason</td>
                    <td>@item.start_date</td>
                    <td>@item.end_date</td>
                    <td>@item.approval_status</td>
                    <td>@item.completion_approval_status</td>
                    <td>@item.completion_status</td>
                    <td>
                        <button class="btn btn-warning btn-sm btnShowDetail" data-id="@item.maintenance_id">
                            <i class="fa fa-eye"></i>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div class="modal fade" id="maintenanceDetailModal" tabindex="-1" role="dialog" aria-labelledby="maintenanceDetailModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="maintenanceDetailModalLabel">Chi tiết bảo trì</h5>
                <button type="button" class="btn-close" data-dismiss="modal" aria-label="Đóng">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div id="maintenanceInfo">
                    <p><strong>Nhân viên bảo trì:</strong> <span id="detailFullName"></span></p>
                    <p><strong>Số khung xe:</strong> <span id="detailFrameNumber"></span></p>
                    <p><strong>Lí do bảo trì:</strong> <span id="detailReason"></span></p>
                    <p><strong>Trạng thái phê duyệt:</strong> <span id="detailApprovalStatus"></span></p>
                    <p><strong>Trạng thái phê duyệt hoàn thành:</strong> <span id="detailCompletionApprovalStatus"></span></p>
                    <p><strong>Trạng thái hoàn thành:</strong> <span id="detailCompletionStatus"></span></p>
                    <hr />
                    <div id="completedInfoContainer" style="display: none;">
                        <p><strong>Phê duyệt bởi:</strong> <span id="detailApprovedByName"></span></p>
                        <p><strong>Ngày bắt đầu:</strong> <span id="detailStartDate"></span></p>
                        <p><strong>Ngày hoàn thành:</strong> <span id="detailEndDate"></span></p>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success" id="btnApprove">
                    <i class="fa fa-check"></i> Phê duyệt
                </button>
                <button type="button" class="btn btn-danger" id="btnReject">
                    <i class="fa fa-times"></i> Từ chối
                </button>
            </div>
        </div>
    </div>
</div>

<script>
     function onChangeCategory() {
        var selectedVal = document.getElementById("filterCategory").value;
        var secondDropdown = document.getElementById("filterStatus");

        // Clear old items in dropdown 2
        secondDropdown.innerHTML = "";
        // Default allows selecting "Tất cả"
        secondDropdown.options.add(new Option("Tất cả", ""));

        // If nothing is selected (Tất cả), disable dropdown 2
        if (selectedVal === "") {
            secondDropdown.disabled = true;
        } else {
            secondDropdown.disabled = false;

            // Depending on the attribute value of dropdown 1
            // assign options to dropdown 2
            if (selectedVal === "approval_status") {
                secondDropdown.options.add(new Option("Chờ phê duyệt", "Chờ phê duyệt"));
                secondDropdown.options.add(new Option("Đã phê duyệt", "Đã phê duyệt"));
                secondDropdown.options.add(new Option("Từ chối", "Từ chối"));
            } else if (selectedVal === "completion_status") {
                secondDropdown.options.add(new Option("Đang bảo trì", "Đang bảo trì"));
                secondDropdown.options.add(new Option("Đã hoàn thành", "Đã hoàn thành"));
            } else if (selectedVal === "completion_approval_status") {
                secondDropdown.options.add(new Option("Chờ xác nhận", "Chờ xác nhận"));
                secondDropdown.options.add(new Option("Đã xác nhận", "Đã xác nhận"));
                secondDropdown.options.add(new Option("Từ chối", "Từ chối"));
            }
        }
    }

    // Function to set dropdown 2 on page load
    window.onload = function () {
        // Call onChangeCategory() to populate appropriate options
        onChangeCategory();

        // Get filterStatus value from Razor
        var currentFilterStatus = "@currentFilterStatus";
        // If there is a filterStatus value, set it for dropdown 2
        if (currentFilterStatus) {
            document.getElementById("filterStatus").value = currentFilterStatus;
        }
    };
</script>

<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
<script>
    // Click event for the small X button in the modal (if you want to add more logic)
    $(document).on("click", ".btn-close[data-dismiss='modal']", function() {
        console.log("Modal closed with X button.");
        // Add more actions here if needed
    });

    // Handle View button event
    $(document).on("click", ".btnShowDetail", function() {
        var id = $(this).data("id");
        // Call AJAX to get details
        $.ajax({
            url: '@Url.Action("GetMaintenanceDetail","BaoTri")',
            type: 'GET',
            data: { id: id },
            success: function (response) {
                if (!response.success) {
                    swal({
                        title: "Oops...",
                        text: response.message,
                        icon: 'error',
                        button: "Đóng"
                    });
                    return;
                }

                // Display data in the modal
                $("#detailFullName").text(response.data.full_name);
                $("#detailFrameNumber").text(response.data.frame_number);
                $("#detailReason").text(response.data.reason);
                $("#detailApprovalStatus").text(response.data.approval_status);
                $("#detailCompletionApprovalStatus").text(response.data.completion_approval_status);
                $("#detailCompletionStatus").text(response.data.completion_status);
                $("#detailApprovedByName").text(response.data.approved_by_name);
                $("#detailStartDate").text(response.data.start_date_str);
                $("#detailEndDate").text(response.data.end_date_str);

                // Check completion status
                if (response.data.completion_status === "Đã hoàn thành") {
                    // Show the completedInfoContainer block
                    $("#completedInfoContainer").show();
                } else {
                    // Hide this block if not completed
                    $("#completedInfoContainer").hide();
                }

                // Store the ID in the modal
                $("#maintenanceDetailModal").data("maintenance-id", response.data.maintenance_id);

                // If not completed => show buttons (or set appropriate text for Case 1 / Case 2)
                if (response.data.completion_status !== "Đã hoàn thành") {
                    if (response.data.approval_status === "Đã phê duyệt") {
                        // Case 2
                        $("#btnApprove").html('<i class="fa fa-check"></i> Xác nhận');
                        $("#btnReject").html('<i class="fa fa-times"></i> Từ chối');
                    } else {
                        // Case 1
                        $("#btnApprove").html('<i class="fa fa-check"></i> Phê duyệt');
                        $("#btnReject").html('<i class="fa fa-times"></i> Từ chối');
                    }

                    // Show both buttons
                    $("#btnApprove").show();
                    $("#btnReject").show();
                }
                else {
                    // If "Đã hoàn thành", hide both buttons for view-only
                    $("#btnApprove").hide();
                    $("#btnReject").hide();
                }

                // Open the modal
                $("#maintenanceDetailModal").modal("show");
            },
            error: function () {
                swal({
                    title: "Lỗi",
                    text: "Lỗi khi gọi server!",
                    icon: 'error',
                    button: "Đóng"
                });
            }
        });
    });

    // Approve button
    $("#btnApprove").click(function() {
        var id = $("#maintenanceDetailModal").data("maintenance-id");
        callUpdateStatus(id, "approve");
    });

    // Reject button
    $("#btnReject").click(function() {
        var id = $("#maintenanceDetailModal").data("maintenance-id");
        callUpdateStatus(id, "reject");
    });

    // AJAX update function
    function callUpdateStatus(id, actionType) {
        $.ajax({
            url: '@Url.Action("UpdateMaintenanceStatus","BaoTri")',
            type: 'POST',
            data: { id: id, actionType: actionType },
            success: function (response) {
                if (!response.success) {
                    swal({
                        title: "Oops...",
                        text: response.message,
                        icon: 'error',
                        button: "Đóng"
                    });
                    return;
                }

                // Show SweetAlert success popup
                swal({
                    title: "Thành công",
                    text: response.message,
                    icon: 'success',
                    button: "Đóng"
                }).then(function() {
                    // Close modal, reload
                    $("#maintenanceDetailModal").modal("hide");
                    location.reload();
                });
            },
            error: function() {
                swal({
                    title: "Lỗi",
                    text: "Lỗi khi cập nhật trạng thái!",
                    icon: 'error',
                    button: "Đóng"
                });
            }
        });
    }
</script>

@{
    if (TempData["EmptyListMessage"] != null)
    {
        var message = TempData["EmptyListMessage"].ToString();
        <script>
            swal({
                title: "Oops...",
                text: "@Html.Raw(TempData["EmptyListMessage"])",
                icon: 'error',
                button: "Đóng"
            });
        </script>
    }
    // ... (keep other TempData checks as they were) ...
    if (TempData["ApproveMessage"] != null)
    {
        var message = TempData["ApproveMessage"].ToString();
        <script>
           swal({
               title: "Thành công",
               text: "@Html.Raw(TempData["ApproveMessage"])",
               icon: 'success',
               button: "Đóng"
           });
        </script>
    }
    if (TempData["Approve_Message"] != null)
    {
        var message = TempData["Approve_Message"].ToString();
        <script>
           swal({
               title: "Thành công",
               text: "@Html.Raw(TempData["Approve_Message"])",
               icon: 'success',
               button: "Đóng"
           });
        </script>
    }
    if (TempData["NoApproveMessage"] != null)
    {
        var message = TempData["NoApproveMessage"].ToString();
        <script>
           swal({
               title: "Oops...",
               text: "@Html.Raw(TempData["NoApproveMessage"])",
               icon: 'error',
               button: "Đóng"
           });
        </script>
    }
    if (TempData["NoApprove_Message"] != null)
    {
        var message = TempData["NoApprove_Message"].ToString();
        <script>
           swal({
               title: "Oops...",
               text: "@Html.Raw(TempData["NoApprove_Message"])",
               icon: 'error',
               button: "Đóng"
           });
        </script>
    }
}