@model IEnumerable<MotoBikeManage.Models.Maintenance>

@{
    ViewBag.Title = "Danh sách Yêu Cầu Bảo Trì"; // Changed title slightly

    // Retrieve the user role from ViewBag
    var userRole = ViewBag.UserRole as string;

    // Set the layout based on the user role
    if (userRole == "Admin")
    {
        Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    }
    else if (userRole == "NhanVien") // Based on your index.txt
    {
        Layout = "~/Views/Shared/_Layout_Staff.cshtml"; // Ensure this path is correct
    }
    else // Default layout for other roles or if role is not set
    {
        Layout = "~/Views/Shared/_Layout.cshtml"; // Example default layout
    }
}

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/js/bootstrap.bundle.min.js"></script>
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
<style>
    /* Your existing CSS styles remain here */
    /* ... */
    .action-button-container {
        margin-bottom: 15px; /* Add some space below the button */
        text-align: left; /* Or right, depending on preference */
        padding-left: 15px; /* Match container padding */
        padding-right: 15px;
    }
</style>

@{
    // Keep the existing code for getting filter values
    var currentFilterCategory = Request.QueryString["filterCategory"] ?? "";
    var currentFilterStatus = Request.QueryString["filterStatus"] ?? "";
    string emptyListMessage = TempData["EmptyListMessage"] as string;
}

<div class="container action-button-container" style="margin-top: 20px;">
    @if (userRole == "Admin" || userRole == "NhanVien")
    {
        <a href="@Url.Action("Create", "BaoTri")" class="btn btn-primary">
            <i class="fa fa-plus-circle"></i> Tạo Yêu Cầu Bảo Trì Mới
        </a>
    }
</div>

<form method="get" action="@Url.Action("Index", "BaoTri")" class="form-inline mb-3 justify-content-center">
    <div class="form-group mr-2">
        <label for="filterCategory" class="mr-2">Tất cả:</label>
        <select id="filterCategory"
                name="filterCategory"
                class="form-control"
                onchange="onChangeCategory()">
            <option value="" @(currentFilterCategory == "" ? "selected" : "")>Tất cả</option>
            <option value="approval_status" @(currentFilterCategory == "approval_status" ? "selected" : "")>
                Trạng thái phê duyệt
            </option>
            <option value="completion_status" @(currentFilterCategory == "completion_status" ? "selected" : "")>
                Trạng thái hoàn thành
            </option>
            <option value="completion_approval_status" @(currentFilterCategory == "completion_approval_status" ? "selected" : "")>
                Trạng thái phê duyệt hoàn thành
            </option>
        </select>
    </div>

    <div class="form-group mr-2">
        <label for="filterStatus" class="mr-2">Thuộc tính tương ứng:</label>
        <select id="filterStatus"
                name="filterStatus"
                class="form-control"
                disabled>
            <option value="">Tất cả</option>
        </select>
    </div>

    <button type="submit" class="btn btn-primary">Lọc</button>
</form>

<div class="container mt-3" style="width:100%; padding: 0;">
    @* Adjusted margin-top and removed padding if button container handles it *@
    <div class="card shadow mb-4">
        @* Optional: Wrap table in a card for better styling *@
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Danh sách Yêu cầu Bảo trì</h6>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                @* Make table responsive *@
                <table class="table table-bordered table-hover text-center" id="maintenanceTable">
                    @* Added hover effect and an ID *@
                    <thead class="thead-light">
                        @* Use thead-light for better contrast *@
                        <tr>
                            <th>Người Yêu Cầu</th> @* Changed from Nhân viên to Người Yêu Cầu for clarity *@
                            <th>Xe (Số khung)</th> @* Clarified Vehicle column *@
                            <th>Lý do</th> @* Shortened label *@
                            <th>Ngày Bắt Đầu</th>
                            <th>Ngày Kết Thúc</th>
                            <th>Trạng Thái Phê Duyệt</th>
                            <th>Trạng Thái Xác Nhận HT</th> @* Shortened label *@
                            <th>Trạng Thái Hoàn Thành</th>
                            <th>Hành Động</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (!Model.Any())
                        {
                            <tr>
                                <td colspan="9" class="text-center">Không có yêu cầu bảo trì nào.</td>
                            </tr>
                        }
                        else
                        {
                            foreach (var item in Model)
                            {
                                <tr>
                                    <td>@(item.User1?.full_name ?? "N/A")</td> @* Safe navigation for requester name *@
                                    <td>@(item.Vehicle?.frame_number ?? "N/A") (@(item.Vehicle?.VehicleModel?.name ?? ""))</td> @* Show frame number and model name *@
                                    <td>@item.reason</td>
                                    <td>@(item.start_date?.ToString("dd/MM/yyyy HH:mm") ?? "-")</td> @* Format date *@
                                    <td>@(item.end_date?.ToString("dd/MM/yyyy HH:mm") ?? "-")</td> @* Format date *@
                                    <td>@item.approval_status</td>
                                    <td>@item.completion_approval_status</td>
                                    <td>@item.completion_status</td>
                                    <td>
                                        <button class="btn btn-info btn-sm btnShowDetail" data-id="@item.maintenance_id" title="Xem Chi tiết">
                                            @* Changed color, added title *@
                                            <i class="fa fa-eye"></i>
                                        </button>
                                        @* Optional: Add Edit/Delete buttons here based on role and status *@
                                        @*
                                            if (userRole == "Admin" || (userRole == "NhanVien" && item.requested_by == (int)Session["Id"] && item.approval_status == "Chờ phê duyệt"))
                                            {
                                                <a href="@Url.Action("Edit", "BaoTri", new { id = item.maintenance_id })" class="btn btn-warning btn-sm" title="Sửa"> <i class="fa fa-edit"></i></a>
                                                <a href="@Url.Action("Delete", "BaoTri", new { id = item.maintenance_id })" class="btn btn-danger btn-sm" title="Xóa" onclick="return confirm('Bạn chắc chắn muốn xóa yêu cầu này?');"> <i class="fa fa-trash"></i></a>
                                            }
                                        *@
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>


<div class="modal fade" id="maintenanceDetailModal" tabindex="-1" role="dialog" aria-labelledby="maintenanceDetailModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="maintenanceDetailModalLabel">Chi tiết bảo trì</h5>
                @* Ensure correct dismiss attribute for Bootstrap 4 *@
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div id="maintenanceInfo">
                    <p><strong>Người Yêu Cầu:</strong> <span id="detailFullName"></span></p>
                    <p><strong>Xe (Model):</strong> <span id="detailVehicleModel"></span></p>
                    <p><strong>Số khung xe:</strong> <span id="detailFrameNumber"></span></p>
                    <p><strong>Lí do bảo trì:</strong> <span id="detailReason"></span></p>
                    <p><strong>Loại bảo trì:</strong> <span id="detailMaintenanceType"></span></p>
                    <p><strong>Mức ưu tiên:</strong> <span id="detailPriority"></span></p>
                    <hr />
                    <p><strong>Trạng thái phê duyệt:</strong> <span id="detailApprovalStatus"></span></p>
                    <p><strong>Trạng thái xác nhận HT:</strong> <span id="detailCompletionApprovalStatus"></span></p>
                    <p><strong>Trạng thái hoàn thành:</strong> <span id="detailCompletionStatus"></span></p>
                    <hr />
                    @* Show Approver/Completion Info only if applicable *@
                    <div id="adminActionInfoContainer" style="display: none;">
                        <p><strong>Phê duyệt/Từ chối bởi:</strong> <span id="detailApprovedByName"></span></p>
                        <p><strong>Ngày bắt đầu:</strong> <span id="detailStartDate"></span></p>
                        <p><strong>Ngày hoàn thành:</strong> <span id="detailEndDate"></span></p>
                    </div>
                </div>
            </div>
            @* Conditionally show footer buttons based on role and status passed from AJAX *@
            <div class="modal-footer" id="modalActionFooter">
                <button type="button" class="btn btn-success" id="btnApprove">
                    <i class="fa fa-check"></i> Phê duyệt / Xác nhận HT
                </button>
                <button type="button" class="btn btn-danger" id="btnReject">
                    <i class="fa fa-times"></i> Từ chối
                </button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Đóng</button> @* Always show close button *@
            </div>
        </div>
    </div>
</div>

<script>
    // onChangeCategory function remains the same
    function onChangeCategory() {
        var selectedVal = document.getElementById("filterCategory").value;
        var secondDropdown = document.getElementById("filterStatus");
        secondDropdown.innerHTML = "";
        secondDropdown.options.add(new Option("Tất cả", ""));
        if (selectedVal === "") {
            secondDropdown.disabled = true;
        } else {
            secondDropdown.disabled = false;
            if (selectedVal === "approval_status") {
                secondDropdown.options.add(new Option("Chờ phê duyệt", "Chờ phê duyệt"));
                secondDropdown.options.add(new Option("Đã phê duyệt", "Đã phê duyệt"));
                secondDropdown.options.add(new Option("Từ chối", "Từ chối"));
            } else if (selectedVal === "completion_status") {
                secondDropdown.options.add(new Option("Đang bảo trì", "Đang bảo trì"));
                secondDropdown.options.add(new Option("Đã hoàn thành", "Đã hoàn thành"));
            } else if (selectedVal === "completion_approval_status") {
                secondDropdown.options.add(new Option("Chờ xác nhận", "Chờ xác nhận"));
                secondDropdown.options.add(new Option("Đã xác nhận", "Đã xác nhận"));
                secondDropdown.options.add(new Option("Từ chối", "Từ chối"));
            }
        }
    }
    // onload setup remains the same
    window.onload = function () {
        onChangeCategory();
        var currentFilterStatus = "@currentFilterStatus";
        if (currentFilterStatus) {
            document.getElementById("filterStatus").value = currentFilterStatus;
        }
        // Optional: Initialize DataTable if you want sorting/searching on the table
        // $('#maintenanceTable').DataTable({ "language": { "url": "//cdn.datatables.net/plug-ins/1.10.21/i18n/Vietnamese.json" } });
    };
</script>

<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
<script>
    $(document).ready(function() { // Ensure scripts run after DOM is ready

        // Click event for the small X button in the modal (if you want to add more logic)
        $(document).on("click", ".close[data-dismiss='modal']", function() { // Target Bootstrap 4 close button
            console.log("Modal closed with X button.");
            // Add more actions here if needed
        });

        // Handle View button event
        $(document).on("click", ".btnShowDetail", function() {
            var id = $(this).data("id");
             $('#maintenanceDetailModal').modal('show'); // Show modal immediately (optional, show loading?)
             $('#maintenanceInfo').hide(); // Hide content while loading
             $('#modalActionFooter button').hide(); // Hide action buttons initially
             $('.modal-body').append('<div id="modalLoading" class="text-center"><i class="fa fa-spinner fa-spin fa-2x"></i> Loading...</div>'); // Add loading indicator

            $.ajax({
                url: '@Url.Action("GetMaintenanceDetail","BaoTri")',
                type: 'GET',
                data: { id: id },
                success: function (response) {
                    $('#modalLoading').remove(); // Remove loading indicator
                    if (!response.success) {
                         $('#maintenanceDetailModal').modal('hide'); // Hide modal on error
                        swal({
                            title: "Oops...",
                            text: response.message,
                            icon: 'error',
                            button: "Đóng"
                        });
                        return;
                    }

                    // Populate modal content
                    $("#detailFullName").text(response.data.full_name);
                     $("#detailVehicleModel").text(response.data.vehicle_model);
                    $("#detailFrameNumber").text(response.data.frame_number);
                    $("#detailReason").text(response.data.reason);
                     $("#detailMaintenanceType").text(response.data.maintenance_type);
                     $("#detailPriority").text(response.data.priority);
                    $("#detailApprovalStatus").text(response.data.approval_status);
                    $("#detailCompletionApprovalStatus").text(response.data.completion_approval_status);
                    $("#detailCompletionStatus").text(response.data.completion_status);


                    // Show admin/completion info only if relevant data exists
                     if(response.data.approved_by_name !== 'Chưa duyệt' || response.data.completion_status === 'Đã hoàn thành') {
                         $("#detailApprovedByName").text(response.data.approved_by_name);
                         $("#detailStartDate").text(response.data.start_date_str);
                         $("#detailEndDate").text(response.data.end_date_str);
                         $("#adminActionInfoContainer").show();
                     } else {
                         $("#adminActionInfoContainer").hide();
                     }


                    // Store the ID in the modal's data attribute
                    $("#maintenanceDetailModal").data("maintenance-id", response.data.maintenance_id);

                    // Determine if action buttons should be shown (Only for Admin)
                     var currentUserRole = "@userRole"; // Get role from Razor variable
                    var showActionButtons = false;

                    if (currentUserRole === "Admin") {
                        // Admin can act if request is 'Chờ phê duyệt' OR ('Đã phê duyệt' AND 'Đang bảo trì')
                        if (response.data.approval_status === 'Chờ phê duyệt' ||
                            (response.data.approval_status === 'Đã phê duyệt' && response.data.completion_status === 'Đang bảo trì'))
                         {
                             showActionButtons = true;

                            // Adjust button text based on state
                             if (response.data.approval_status === "Đã phê duyệt") {
                                 // Case 2: Confirm/Reject Completion
                                 $("#btnApprove").html('<i class="fa fa-check"></i> Xác nhận Hoàn Thành');
                                 $("#btnReject").html('<i class="fa fa-times"></i> Từ chối Hoàn Thành');
                             } else {
                                 // Case 1: Approve/Reject Request
                                 $("#btnApprove").html('<i class="fa fa-check"></i> Phê duyệt Yêu Cầu');
                                 $("#btnReject").html('<i class="fa fa-times"></i> Từ chối Yêu Cầu');
                             }
                         }
                    }

                    // Show/hide action buttons based on logic above
                     if (showActionButtons) {
                         $("#btnApprove").show();
                         $("#btnReject").show();
                         $("#modalActionFooter button[data-dismiss='modal']").show(); // Show close button
                     } else {
                         $("#btnApprove").hide();
                         $("#btnReject").hide();
                         $("#modalActionFooter button[data-dismiss='modal']").show(); // Still show close button
                    }
                     $('#maintenanceInfo').show(); // Show populated content

                },
                error: function () {
                     $('#modalLoading').remove(); // Remove loading indicator
                     $('#maintenanceDetailModal').modal('hide'); // Hide modal on error
                    swal({
                        title: "Lỗi",
                        text: "Lỗi khi tải chi tiết yêu cầu!",
                        icon: 'error',
                        button: "Đóng"
                    });
                }
            });
        }); // End btnShowDetail click

        // Approve button click - Action logic remains the same
        $("#btnApprove").click(function() {
            var id = $("#maintenanceDetailModal").data("maintenance-id");
            // Add confirmation dialog
             swal({
                 title: "Xác nhận?",
                 text: "Bạn có chắc muốn thực hiện hành động này?",
                 icon: "warning",
                 buttons: ["Hủy", "Xác nhận"],
                 dangerMode: false, // False for approve/confirm, true for reject/delete
             })
             .then((willProcess) => {
                 if (willProcess) {
                     callUpdateStatus(id, "approve");
                 }
             });
        });

        // Reject button click - Action logic remains the same
        $("#btnReject").click(function() {
            var id = $("#maintenanceDetailModal").data("maintenance-id");
             // Add confirmation dialog
             swal({
                 title: "Xác nhận?",
                 text: "Bạn có chắc muốn từ chối yêu cầu/xác nhận này?",
                 icon: "warning",
                 buttons: ["Hủy", "Xác nhận"],
                 dangerMode: true, // True for reject/delete
             })
             .then((willProcess) => {
                 if (willProcess) {
                    callUpdateStatus(id, "reject");
                 }
             });
        });

        // AJAX update function remains the same (ensure CSRF token if needed)
        function callUpdateStatus(id, actionType) {
             // If using ValidateAntiForgeryToken, you need to include the token in the data
             // var token = $('input[name="__RequestVerificationToken"]').val(); // Get token from form
             $.ajax({
                 url: '@Url.Action("UpdateMaintenanceStatus","BaoTri")',
                 type: 'POST',
                 // data: { id: id, actionType: actionType, __RequestVerificationToken: token }, // Include token
                 data: { id: id, actionType: actionType }, // Without token for now, add if needed
                 success: function (response) {
                     if (!response.success) {
                         swal({ title: "Oops...", text: response.message, icon: 'error', button: "Đóng" });
                         return;
                     }
                     swal({ title: "Thành công", text: response.message, icon: 'success', button: "Đóng" })
                     .then(function() {
                         $("#maintenanceDetailModal").modal("hide");
                         location.reload(); // Reload page to see updated status
                     });
                 },
                 error: function() {
                     swal({ title: "Lỗi", text: "Lỗi khi cập nhật trạng thái!", icon: 'error', button: "Đóng" });
                 }
             });
         }

     }); // End document ready
</script>

@{
    if (TempData["EmptyListMessage"] != null) { /* ... */ }
    if (TempData["ApproveMessage"] != null) { /* ... */ }
    if (TempData["Approve_Message"] != null) { /* ... */ }
    if (TempData["NoApproveMessage"] != null) { /* ... */ }
    if (TempData["NoApprove_Message"] != null) { /* ... */ }
    // Add TempData checks for Success/Error from Create action if you added them
    if (TempData["Success"] != null)
    {
        <script>swal({ title: "Thành công", text: "@Html.Raw(TempData["Success"])", icon: 'success', button: "Đóng" });</script>
    }
    if (TempData["Error"] != null)
    {
        <script>swal({ title: "Lỗi", text: "@Html.Raw(TempData["Error"])", icon: 'error', button: "Đóng" });</script>
    }
}